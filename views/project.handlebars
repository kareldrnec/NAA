{{> navbar_index}}

{{#if flash}}
<div style="text-align: center" id="flash" class="alert alert-{{flash.type}}" role="alert">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <strong>{{flash.text}}</strong>
</div>
{{/if}}

<div id="myDiagramDiv" style="width: 99%; height: 50vw;"></div>

<!-- 50vw -->


<!-- Modal Export -->
<div class="modal fade" id="exportProjectModal" tabindex="-1" role="dialog" aria-labelledby="exportProjectModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportProjectModalLabel">{{__ "export"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="nameOfFile">{{__ "filename"}}</label>
                    <input type="text" class="form-control" id="nameOfFile" placeholder="{{__ "enter name of file"}}">
                </div>
                <div class="form-group">
                    <label for="typeOfFile">{{__ "type of file"}}</label>
                    <select id="typeOfFile" class="form-control">
                        <option value="svg">SVG</option>
                        <option value="png">PNG</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                <button type="submit" class="btn btn-primary" id="exportButton">{{__ "export"}}</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Save -->
<div class="modal fade" id="saveProjectModal" tabindex="-1" role="dialog" aria-labelledby="saveProjectModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saveProjectModalLabel">{{__ "save as JSON"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="nameOfSavedFile">{{__ "filename"}}</label>
                    <input type="text" class="form-control" id="nameOfSavedFile" placeholder="{{__ "enter name of file"}}">
                </div>
                <div class="form-group">
                    <label for="typeOfFile">{{__ "type of file"}}</label>
                    <input type="text" class="form-control" value="JSON" readonly>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                <button type="submit" class="btn btn-primary" id="saveButton">{{__ "save"}}</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal Delete -->
<div class="modal fade" id="deleteProjectModal" tabindex="-1" role="dialog" aria-labelledby="deleteProjectModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteProjectModalLabel">{{__ "delete"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" action="/projects/delete/{{projectID}}/?_method=DELETE">
                <div class="modal-body">
                    <div class="text-center">
                        {{__ "delete project"}}?
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "delete"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Calculation -->
<div class="modal fade" id="calculationModal" tabindex="-1" role="dialog" aria-labelledby="calculationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="calculationModalLabel">{{__ "set up calculation"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="calculationForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="typeOfAnalysis">{{__ "type of project"}}</label>
                        <input type="text" class="form-control" value="{{upper projectType}}" readonly>
                    </div>            
                    {{#ifEquals projectType "pert"}}
                    <!-- Set PERT Calculation -->
                    <div class="form-group">
                        <label>{{__ "find"}}</label>
                        <select name="typeOfCalculation" class="form-control"  onchange="changeCalculationType(this)">
                            <option value="P" title="{{__ "probability"}}">P ({{__ "probability"}})</option>
                            <option value="T" title="{{__ "time"}}">T ({{__ "time"}})</option>
                        </select>
                    </div>
                    <div id="probRow">
                        <div id="firstRow">
                            <div class="row g-2">
                                <div class="col-sm">
                                    <label for="pertSelect1">{{__ "option"}}</label>
                                    <select name="pertSelect1" class="form-control">
                                        <option value="lt">&lt;</option>
                                        <option value="gt">&gt;</option>
                                    </select>
                                </div>
                                <div class="col-sm">
                                    <label>{{__ "value"}}</label>
                                    <input type="number" class="form-control" min="0" value="0">
                                </div>
                                <div class="col-sm">
                                    <label>{{__ "time unit"}}</label>
                                    <select class="form-control">
                                        <option value="seconds">{{__ "seconds"}}</option>
                                        <option value="minutes">{{__ "minutes"}}</option>
                                        <option value="hours" selected>{{__ "hours"}}</option>
                                        <option value="days">{{__ "days"}}</option>
                                        <option value="weeks">{{__ "weeks"}}</option>
                                        <option value="months">{{__ "months"}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="text-center" style="margin-top: 5px;">
                            <button type="button" class="btn btn-secondary" onclick="showSecondRow()" id="addRow"><i class="fas fa-plus-square"></i></button>
                        </div> 
                        <div id="secondRow" style="display: none;">
                            <div class="row g-2">
                                <div class="col-sm">
                                    <select name="pertSelect2" class="form-control">
                                        <option value="lt">&lt;</option>
                                        <option value="gt">&lt;</option>
                                    </select>
                                </div>
                                <div class="col-sm">
                                    <input type="number" class="form-control" min="0" value="0">
                                </div>
                                <div class="col-sm"></div>
                            </div>
                        </div>
                        <div class="text-center" style="margin-top: 5px;">
                            <button type="button" class="btn btn-secondary" style="display: none;" onclick="hideSecondRow()" id="removeRow"><i class="fas fa-minus-square"></i></button>
                        </div>
                    </div>
                    <div id="timeRow" style="display: none;">
                        <div class="row g-2">
                            <div class="col-sm">
                                <label>{{__ "option"}}</label>
                                <input type="text" class="form-control" value="=" readonly>
                            </div>
                            <div class="col-sm">
                                <label>{{__ "value"}}</label>
                                <input type="number" class="form-control" min="0" value="0">
                            </div>
                        </div>
                    </div>
                    {{/ifEquals}}
                </div>
                <div style="background-color: #ffb8b8; display: none;" id="calculationErrDiv">
                    <button type="button" class="close" onclick="closeErrDiv('calculationErrDiv')" style="margin-right: 5px">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <div id="calculationErrMsg" style="margin-left: 5px;"></div>
                </div> 
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="button" value="{{__ "run"}}" id="calculationSubmit" name="calculationSubmit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add State Modal -->
<div class="modal fade" id="addStateModal" tabindex="-1" role="dialog" aria-labelledby="addStateModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStateModalLabel">{{__ "new state"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="addStateForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="stateName">{{__ "state name"}}</label>
                        <input type="text" class="form-control" id="stateNameInput" name="stateNameInput"
                            aria-describedby="stateNameHelp" placeholder="{{__ "enter state name"}}" title="{{__ "required information"}}" required>
                    </div>
                    <div class="form-group">
                        <label for="stateInfo">{{__ "information"}}</label>
                        <input type="text" class="form-control" id="stateInfoInput" name="stateInfoInput"
                            placeholder="{{__ "enter state description"}}" title="{{__ "optional information"}}">
                    </div>
                    <div style="background-color: #ffb8b8; display: none;" id="addStateError">
                        <button type="button" class="close" onclick="closeErrDiv('addStateError')" style="margin-right: 5px;">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <div id="addStateErrMsg" style="margin-left: 5px;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "add"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit State Modal -->
<div class="modal fade" id="editStateModal" tabindex="-1" role="dialog" aria-labelledby="editStateModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStateModalLabel">{{__ "edit state"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="editStateForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editStateName">{{__ "state name"}}</label>
                        <input type="text" class="form-control" id="editStateName" name="editStateName" 
                        placeholder="{{__ "enter state name"}}" title="{{__ "required information"}}" required>
                    </div>
                    <div class="form-group">
                        <label for="editStateInfo">{{__ "information"}}</label>
                        <input type="text" class="form-control" id="editStateInfo" name="editStateInfo"
                            placeholder="{{__ "enter state description"}}" title="{{__ "optional information"}}">
                    </div>
                    <div style="background-color: #ffb8b8; display: none" id="editStateError">
                        <button type="button" class="close" onclick="closeErrDiv('editStateError')" style="margin-right: 5px;">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <div id="editStateErrMsg" style="margin-left: 5px;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "edit"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete State Modal -->
<div class="modal fade" id="deleteStateModal" tabindex="-1" role="dialog" aria-labelledby="deleteStateModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteStateModalLabel">{{__ "delete state"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="deleteStateForm">
                <div class="modal-body">
                    {{__ "delete state question"}}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "delete"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Add Activity Modal -->
<div class="modal fade" id="addActivityModal" tabindex="-1" role="dialog" aria-labelledby="addActivityModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="text-center">
                    <h5 class="modal-title" id="addActivityModalLabel">{{__ "add activity"}}</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="addActivityForm" action="" method="POST">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="activityNameInput">{{__ "activity name"}}</label>
                        <input type="text" class="form-control" id="activityNameInput" name="activityNameInput"
                            placeholder="{{__ "enter activity name"}}" title="{{__ "required information"}}" required>
                    </div>
                    <div class="form-group">
                        <label for="analysisType">{{__ "analysis type"}}</label>
                        <input type="text" class="form-control" value="{{upper projectType}}" readonly>
                    </div>
                    <div class="form-group">
                        <label for="activityTypeSelect">{{__ "activity type"}}</label>
                        <select class="form-control" id="activityTypeSelect" name="activityTypeSelect">
                            <option value="normal">{{__ "normal"}}</option>
                            <option value="dummy">{{__ "dummy"}}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="activityDescription">{{__ "description"}}</label>
                        <input type="text" class="form-control" name="activityDescription" id="activityDescription" 
                            placeholder="{{__ "enter activity description"}}" title="{{__ "optional information"}}">
                    </div>
                    <div id="activityValues">
                        <hr class="solid">
                        <div class="text-center">
                            <h6>{{__ "activity values"}}</h6>
                        </div>
                        {{#ifEquals projectType "cpm"}}
                            <div class="form-group">
                                <label for="lengthOfActivity">{{__ "length of activity"}}</label>
                                <input type="number" class="form-control" name="lengthOfActivity" id="lengthOfActivity" min="0" value="0">
                            </div>                            
                        {{/ifEquals}}
                        {{#ifEquals projectType "pert"}}
                            <div class="form-group">
                                <label for="optimisticValue">{{__ "optimistic value"}}</label>
                                <input type="number" class="form-control" name="optimisticValue" id="optimisticValue" min="0" value="0" step="1">
                                <label for="mostExpectedValue">{{__ "most expected value"}}</label>
                                <input type="number" class="form-control" name="mostExpectedValue" id="mostExpectedValue" min="0" value="0" step="1">
                                <label for="pessimisticValue">{{__ "pessimistic value"}}</label>
                                <input type="number" class="form-control" name="pessimisticValue" id="pessimisticValue" min="0" value="0" step="1">
                            </div>
                        {{/ifEquals}}
                        <hr class="solid">
                        <div class="form-group">
                            <label for="valueType">{{__ "time unit"}}</label>
                            <select class="form-control" id="activityTimeUnit" name="activityTimeUnit">
                                <option value="seconds">{{__ "seconds"}}</option>
                                <option value="minutes">{{__ "minutes"}}</option>
                                <option value="hours" selected>{{__ "hours"}}</option>
                                <option value="days">{{__ "days"}}</option>
                                <option value="weeks">{{__ "weeks"}}</option>
                                <option value="months">{{__ "months"}}</option>
                            </select>
                        </div>
                        <div style="background-color: #ffb8b8; display: none;" id="addActError">
                            <button type="button" class="close" onclick="closeErrDiv('addActError')" style="margin-right: 5px;">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <div id="addActErrMsg" style="margin-left: 5px;"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "add"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Activity Modal -->
<div class="modal fade" id="editActivityModal" tabindex="-1" role="dialog" aria-labelledby="editActivityModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editActivityModalLabel">{{__ "edit activity"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="editActivityForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editedActivityName">{{__ "activity name"}}</label>
                        <input type="text" class="form-control" id="editedActivityName" name="editedActivityName"
                            placeholder="{{__ "enter activity name"}}" title="{{__ "required information"}}" required>
                    </div>
                    <div class="form-group">
                        <label for="analysisType">{{__ "analysis type"}}</label>
                        <input type="text" class="form-control" value="{{upper projectType}}" readonly>
                    </div>
                    <div class="form-group">
                        <label for="editedActivityType">{{__ "activity type"}}</label>
                        <select class="form-control" id="editedActivityType" name="editedActivityType">
                            <option value="normal">{{__ "normal"}}</option>
                            <option value="dummy">{{__ "dummy"}}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editedActivityDescription">{{__ "description"}}</label>
                        <input type="text" class="form-control" id="editedActivityDescription" name="editedActivityDescription"
                            placeholder="{{__ "enter activity description"}}" title="{{__ "optional information"}}">
                    </div>
                    <div id="editedActivityValues">
                        <hr class="solid">
                        <div class="text-center">
                            <h6>{{__ "activity values"}}</h6>
                        </div>
                        {{#ifEquals projectType "cpm"}}
                            <div class="form-group">
                                <label for="editedActivityLength">{{__ "length of activity"}}</label>
                                <input type="number" class="form-control" id="editedActivityLength" name="editedActivityLength" min="0" required>
                            </div>
                        {{/ifEquals}}
                        {{#ifEquals projectType "pert"}}
                            <div class="form-group">
                                <label for="editedActivityOptimistic">{{__ "optimistic value"}}</label>
                                <input type="number" class="form-control" id="editedActivityOptimistic" name="editedActivityOptimistic" min="0"
                                    title="{{__ "optimistic value"}}" required>
                                <label for="editedActivityMost">{{__ "most expected value"}}</label>
                                <input type="number" class="form-control" id="editedActivityMost" name="editedActivityMost" min="0"
                                    title="{{__ "most expected value"}}" required>
                                <label for="editedActivityPessimistc">{{__ "pessimistic value"}}</label>
                                <input type="number" class="form-control" id="editedActivityPessimistic" name="editedActivityPessimistic" min="0"
                                    title="{{__ "pessimistic value"}}" required>
                            </div>
                        {{/ifEquals}}
                        <hr class="solid">
                        <div class="form-group">
                            <label for="editedTimeUnit">{{__ "time unit"}}</label>
                            <select class="form-control" id="editedTimeUnit" name="editedTimeUnit">
                                <option value="seconds">{{__ "seconds"}}</option>
                                <option value="minutes">{{__ "minutes"}}</option>
                                <option value="hours">{{__ "hours"}}</option>
                                <option value="days">{{__ "days"}}</option>
                                <option value="weeks">{{__ "weeks"}}</option>
                                <option value="months">{{__ "months"}}</option>
                            </select>
                        </div>
                        <div style="background-color: #ffb8b8; display: none;" id="editError">
                            <button type="button" class="close" onclick="closeErrDiv('editError')" style="margin-right: 5px;">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <div id="editErrMsg" style="margin-left: 5px;"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "edit"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Activity Modal -->
<div class="modal fade" id="deleteActivityModal" tabindex="-1" role="dialog" aria-labelledby="deleteActivityModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteActivityModalLabel">{{__ "delete activity"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-container" id="deleteActivityForm">
                <div class="modal-body">
                    {{__ "delete activity question"}}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
                    <input type="submit" value="{{__ "delete"}}" id="submit" name="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="helpModal" tabindex="-1" role="dialog" aria-labelledby="helpModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">{{__ "hint"}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <h6>{{__ "state"}}</h6>
                    <img src="/images/state.png" width="150" height="100">
                </div>
                <ul>
                    <li>ES - {{__ "earliest start time"}} </li>
                    <li>LS - {{__ "latest start time"}}</li>
                    <li>State Name - {{__ "state name"}}</li>
                    <li>Slack - {{__ "time reserve"}}</li>
                </ul>
                <div class="text-center">
                    <h6>{{__ "normal activity"}}</h6>
                    <img src="/images/normal_activity.png" width="200" height="100">
                </div>
                <ul>
                    <li>a - {{__ "optimistic value"}}</li>
                    <li>m - {{__ "modal time"}}</li>
                    <li>b - {{__ "pessimistic value"}}</li>
                </ul>
                <div class="text-center">
                    <h6>{{__ "dummy activity"}}</h6>
                    <img src="/images/dummy_activity.png" width="200" height="100">
                </div>
                <div class="text-center">
                    <a href="/help">{{__ "complete user manual"}}</a>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{__ "close"}}</button>
            </div>
        </div>
    </div>
</div>

<script src="/javascripts/initGraph.js"></script>
<script src="/javascripts/calculations.js"></script>
<script src="/javascripts/ParallelRouteLink.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="/javascripts/jstat.min.js"></script>
<script>
    var activities = JSON.parse("{{activities}}".replace(/&quot;/g, '"'));
    var states = JSON.parse("{{states}}".replace(/&quot;/g, '"'));
    var project = JSON.parse("{{project}}".replace(/&quot;/g, '"'));
    var translations = JSON.parse("{{translations}}".replace(/&quot;/g, '"'));
    var socket = io();
    sessionStorage.setItem("currentProject", "{{projectID}}");

    // INIT GRAFU
    init(states, activities, project, "{{projectType}}", translations, "{{graphSettings}}");

    // delete changes when form is close ---------------------
    $('#addStateModal').on('hidden.bs.modal', function () {
        document.getElementById('stateNameInput').value = '';
        document.getElementById('stateInfoInput').value = '';
    });
    // SNAD CAJK ?
    $('#addActivityModal').on('hidden.bs.modal', function () {
        var activityType = document.getElementById('activityTypeSelect');
        document.getElementById('activityNameInput').value = '';
        document.getElementById('activityDescription').value = '';
        document.getElementById('activityTimeUnit').value = 'hours';
        if ("{{projectType}}" == "cpm") {
            if (activityType.value == 'dummy') $('#lengthOfActivity').removeAttr('disabled');
            document.getElementById('lengthOfActivity').value = 0;
        } else {
            if (activityType.value == 'dummy') {
                $('#optimisticValue').removeAttr('disabled');
                $('#mostExpectedValue').removeAttr('disabled');
                $('#pessimisticValue').removeAttr('disabled');
            }
            document.getElementById('optimisticValue').value = 0;
            document.getElementById('mostExpectedValue').value = 0;
            document.getElementById('pessimisticValue').value = 0;
        }
        activityType.value = 'normal';
    });

    $('#editActivityModal').on('hidden.bs.modal', function ()  {
        var activityType = document.getElementById('editedActivityType');
        if ("{{projectType}}" == "cpm" && activityType.value == "dummy") {
            $('#editedActivityLength').removeAttr('disabled');
        } else if ("{{projectType}}" == "pert" && activityType.value == "dummy") {
            $('#editedActivityOptimistic').removeAttr('disabled');
            $('#editedActivityMost').removeAttr('disabled');
            $('#editedActivityPessimistic').removeAttr('disabled');
        }
        document.getElementById('editedActivityDescription').value = '';
    });
    // -------------------------------------------------------

    document.getElementById("saveButton").addEventListener("click", function(event) {
        event.preventDefault();
        var filename = document.getElementById('nameOfSavedFile').value;
        var jsonFile = {};
        var statesJSON = [];
        var activitiesJSON = [];
        var projectJSON = {
            "name": project.projectName,
            "type": project.projectType,
            "description": project.projectInfo, 
            "created": project.createdAt
        }
        // States to JSON
        for(var i = 0; i < states.states.length; i++) {
            statesJSON.push({
                "name": states.states[i].stateName,
                "description": states.states[i].description
            })
        }
        // Activities to JSON
        for(var i = 0; i < activities.activities.length; i++) {
            var fromState = states.states.find(element => element.ID == activities.activities[i].fromState);
            var toState = states.states.find(element => element.ID == activities.activities[i].toState);
            activitiesJSON.push({
                "name": activities.activities[i].activityName,
                "type": activities.activities[i].activityType,
                "description": activities.activities[i].description,
                "fromState": fromState.stateName,
                "toState": toState.stateName,
                "values": activities.activities[i].values,
                "timeUnit": activities.activities[i].timeUnit
            })
        }
        // append data to final JSON
        jsonFile.project = projectJSON;
        jsonFile.states = statesJSON;
        jsonFile.activities = activitiesJSON;
        // check filename
        if(!filename) filename = project.projectName;
        // download file
        var a = document.createElement("a");
        a.href = URL.createObjectURL(
            new Blob([JSON.stringify(jsonFile, null, 4)], {type:"application/json"})
        );
        a.download = filename + ".json";
        a.click();
        // delete value of nameOfSavedFile element and close modal
        document.getElementById('nameOfSavedFile').value = '';
        $('#saveProjectModal').modal('toggle');
    });


    document.getElementById('calculationSubmit').addEventListener('click', function() {
        var errState = checkDiagram(states.states, activities.activities);
        if(errState != "") {
            var calculationErrDiv = document.getElementById('calculationErrDiv');
            var calculationErrMsg = document.getElementById('calculationErrMsg');
            calculationErrMsg.innerHTML = "{{__ "error"}}!<br>";
            calculationErrMsg.innerHTML += "{{__ "check state"}} &#8216;" + errState + "&#8216;!";
            calculationErrDiv.style.display = 'block';
        } else {
            calculate(states.states, activities.activities, project);
            $('#calculationModal').modal('toggle');
            calculationDone();
        }
    });


    // addStateForm - submit - add state
    document.getElementById('addStateForm').addEventListener('submit', function(event) {
        event.preventDefault();
        var stateName = document.getElementById('stateNameInput'),
            stateInfo = document.getElementById('stateInfoInput');
        socket.emit("new state", stateName.value, "{{projectID}}", stateInfo.value); 
    });

    // add state to diagram
    socket.on('new state', function(state) {
        // idk jestli osetrit aby nechodilo vsem
        addCreatedState(state);
        document.getElementById('stateNameInput').value = '';
        document.getElementById('stateInfoInput').value = '';
        $('#addStateModal').modal('toggle');
    });


    // editStateForm - submit - edit state
    document.getElementById('editStateForm').addEventListener('submit', function(event) {
        event.preventDefault();
        var stateName = document.getElementById('editStateName'),
            stateInfo = document.getElementById('editStateInfo'),
            stateID = this.getAttribute("name");
        socket.emit("edit state", stateID, stateName.value, stateInfo.value, "{{projectID}}");
    });

    // edit state in diagram
    socket.on('edit state', function(stateID, stateName, stateInfo, projectID) {
        //edit
        editSelectedState(stateID, projectID, stateName, stateInfo);
        document.getElementById('editStateName').value = '';
        document.getElementById('editStateInfo').value = '';
        $('#editStateModal').modal('toggle');
    });
    
    socket.on('error state', function(errCode, element) {
        var stateName;
        var err = "{{__ "error"}}!";
        if (element == 'add') {
            stateName = document.getElementById('stateNameInput');
            if (errCode == 1) {
                err += "<br> {{__ "state already exists"}}";
            }
            stateName.style.background = "#ffb8b8";
            setTimeout(function() {
                stateName.style.background = "white";
            }, 3000);
            document.getElementById('addStateErrMsg').innerHTML = err;
            document.getElementById('addStateError').style.display = 'block';
        } else if (element = 'edit') {
            stateName = document.getElementById('editStateName');
            if (errCode == 1) {
                err += "<br> {{__ "state already exists"}}";
            }
            stateName.style.background = "#ffb8b8";
            setTimeout(function() {
                stateName.style.background = "white";
            }, 3000);
            document.getElementById('editStateErrMsg').innerHTML = err;
            document.getElementById('editStateError').style.display = 'block';
        }
    });

    // deleteStateForm - submit - delete state
    document.getElementById('deleteStateForm').addEventListener('submit', function(event) {
        event.preventDefault();
        var stateID = this.getAttribute("name");

        socket.emit("delete state", stateID, project._id);

        $('#deleteStateModal').modal('toggle');
    });

    // delete state from diagram
    socket.on('delete state', function(stateID) {
        deleteSelectedState(stateID);
    });

    // activityTypeSelect - onchange display/hide values of activity
    document.getElementById('activityTypeSelect').addEventListener('change', function() {
        if(this.value == "normal") {
            if("{{projectType}}" == "cpm") {
                $('#lengthOfActivity').removeAttr('disabled');
            } else {
                $('#optimisticValue').removeAttr('disabled');
                $('#mostExpectedValue').removeAttr('disabled');
                $('#pessimisticValue').removeAttr('disabled');
            }
        } else {
            if("{{projectType}}" == "cpm") {
                $('#lengthOfActivity').attr('disabled', 'disabled');
            } else {
                $('#optimisticValue').attr('disabled', 'disabled');
                $('#mostExpectedValue').attr('disabled', 'disabled');
                $('#pessimisticValue').attr('disabled', 'disabled');
            }
        }
    });

    // tady dopsat
    document.getElementById('editedActivityType').addEventListener('change', function() {
        if(this.value == "normal") {
            if("{{projectType}}" == "cpm") {
                $('#editedActivityLength').removeAttr('disabled');
            } else {
                $('#editedActivityOptimistic').removeAttr('disabled');
                $('#editedActivityMost').removeAttr('disabled');
                $('#editedActivityPessimistic').removeAttr('disabled');
            }
        } else {
            if("{{projectType}}" == "cpm") {
                $('#editedActivityLength').attr('disabled', 'disabled');
            } else {
                $('#editedActivityOptimistic').attr('disabled', 'disabled');
                $('#editedActivityMost').attr('disabled', 'disabled');
                $('#editedActivityPessimistic').attr('disabled', 'disabled');
            }
        }
    });

    document.getElementById('addActivityForm').addEventListener('submit', function(event) {
        // TODO
        event.preventDefault();

        var valid = true;
            activityName = document.getElementById('activityNameInput'),
            activityType = document.getElementById('activityTypeSelect'),
            activityDescription = document.getElementById('activityDescription'),
            activityTimeUnit = document.getElementById('activityTimeUnit'),
            valuesArr = []; 
            formAction = ($('#addActivityForm').attr('action')).split('&'),
            err = "{{__ "error"}}! <br>"; 
        var length, optimisticValue, mostExpectedValue, pessimisticValue, a, m, b;

        if ("{{projectType}}" == "cpm") {
            length = document.getElementById("lengthOfActivity");
            valuesArr.push(length.value);
        } else {
            optimisticValue = document.getElementById("optimisticValue");
            mostExpectedValue = document.getElementById("mostExpectedValue");
            pessimisticValue = document.getElementById("pessimisticValue");
            
            a = parseInt(optimisticValue.value);
            m = parseInt(mostExpectedValue.value);
            b = parseInt(pessimisticValue.value);

            if(m < a) {
                valid = false;
                err += "{{__ "mostExpectedValue err"}} <br>";
                mostExpectedValue.style.background = "#ffb8b8";
                setTimeout(function() {
                    mostExpectedValue.style.background = "white";
                }, 3000);
            }

            if(b < m) {
                valid = false;
                err += "{{__ "pessimisticValue err"}} <br>";
                pessimisticValue.style.background = "#ffb8b8";
                setTimeout(function() {
                    pessimisticValue.style.background = "white";
                }, 3000);
            }
            valuesArr.push(optimisticValue.value, mostExpectedValue.value, pessimisticValue.value);       
        }
        if(valid){
            if("{{projectType}}" == "cpm") {
                length.value = 0;
            } else {
                optimisticValue.value = 0;
                mostExpectedValue.value = 0;
                pessimisticValue.value = 0;
            }
            socket.emit("new activity", activityName.value, activityType.value, formAction[0], formAction[1], activityTimeUnit.value, valuesArr, activityDescription.value, "{{projectID}}");
        } else {
            document.getElementById('addActErrMsg').innerHTML = err;
            document.getElementById('addActError').style.display = "block";
        }
    });

    // TODO - activity pres socket.io
    // add activity to diagram
    socket.on('new activity', function(activity) {
        addCreatedActivity(activity);
        activityName.value = '';
        activityDescription.value = '';
        $('#addActivityModal').modal('toggle');
    })


    document.getElementById('editActivityForm').addEventListener('submit', function(event) {
        // TODO
        event.preventDefault();
        var activityID = this.getAttribute("name");
        var activityName = document.getElementById('editedActivityName').value;
        var editedActivityType = document.getElementById('editedActivityType').value;
        var editedTimeUnit = document.getElementById('editedTimeUnit');
        var editedActivityDescription = document.getElementById('editedActivityDescription');
        var editedActivityOptimistic, editedActivityMost, editedActivityPessimistic, a, m, b;
        var valid = true;
        var activityValues = [];
        var err = "{{__ "error"}}! <br>";

        if("{{projectType}}" == "cpm" && editedActivityType == "dummy") {
            activityValues.push('0');
        } else if("{{projectType}}" == "cpm" && editedActivityType == "normal") {
            var editedActivityLength = document.getElementById('editedActivityLength').value;
            activityValues.push(editedActivityLength);
        } else if("{{projectType}}" == "pert" && editedActivityType == "dummy") {
            activityValues = ['0', '0', '0'];
        } else if("{{projectType}}" == "pert" && editedActivityType == "normal") {
            editedActivityOptimistic = document.getElementById('editedActivityOptimistic');
            editedActivityMost = document.getElementById('editedActivityMost');
            editedActivityPessimistic = document.getElementById('editedActivityPessimistic');
            
            a = parseInt(editedActivityOptimistic.value);
            m = parseInt(editedActivityMost.value);
            b = parseInt(editedActivityPessimistic.value);

            if(m < a) {
                valid = false;
                err += "{{__ "mostExpectedValue err"}} <br>";
                editedActivityMost.style.background = "#ffb8b8";
                setTimeout(function() {
                    editedActivityMost.style.background = "white";
                }, 3000);
            }

            if(b < m) {
                valid = false;
                err += "{{__ "pessimisticValue err"}} <br>";
                editedActivityPessimistic.style.background = "#ffb8b8";
                setTimeout(function() {
                    editedActivityPessimistic.style.background = "white";
                }, 3000);
            }

            if(valid == true) {
                activityValues = [editedActivityOptimistic.value, editedActivityMost.value, editedActivityPessimistic.value];
            }
        }

        if(valid) {
            socket.emit("edit activity", activityID, activityName, editedActivityType, editedActivityDescription.value, editedTimeUnit.value, activityValues);       
        } else {
            document.getElementById('editErrMsg').innerHTML = err;
            document.getElementById('editError').style.display = "block";
        }
    });
    // edit activity in diagram
    socket.on('edit activity', function(activityID, activityName, activityType, activityDescription, timeUnit, activityValues) {
        // TODO 

        editSelectedActivity(activityID, activityName, activityType, activityDescription, timeUnit, activityValues);

        document.getElementById('editedActivityDescription').value = '';
        
        $('#editActivityModal').modal('toggle'); 
    });

    socket.on('error activity', function(errCode, element) {
        var err = "{{__ "error"}}!";
        var activityName, activityType;
        if (element == "add") {
            if (errCode == 1) {
                // activity with this name already exists
                err += "<br> {{__ "activity exists"}}";
                activityName = document.getElementById('activityNameInput');
                activityName.style.background = "#ffb8b8";
                setTimeout(function() {
                    activityName.style.background = "white";
                }, 3000);
            } else if (errCode == 2) {
                // this activity cannot be dummy
                err += "<br> {{__ "cannot be dummy"}}";
                activityType = document.getElementById('activityTypeSelect');
                activityType.style.background = "#ffb8b8";
                setTimeout(function() {
                    activityType.style.background = "white";
                }, 3000);
            } else if (errCode == 3) {
                // dummy already exists
                err += "<br> {{__ "dummy activity already exists"}}";
                activityType = document.getElementById('activityTypeSelect');
                activityType.style.background = "#ffb8b8";
                setTimeout(function() {
                    activityType.style.background = "white";
                }, 3000);
            }
            document.getElementById('addActErrMsg').innerHTML = err;
            document.getElementById('addActError').style.display = 'block';
        } else if (element == "edit") {
            if (errCode == 1) {
                err += "<br> {{__ "activity exists"}}";
                activityName = document.getElementById('editedActivityName');
                activityName.style.background = "#ffb8b8";
                setTimeout(function() {
                    activityName.style.background = "white";
                }, 3000);
            } else if (errCode == 2) {
                err += "<br> {{__ "cannot be dummy"}}";
                activityType = document.getElementById('editedActivityType');
                activityType.style.background = "#ffb8b8";
                setTimeout(function() {
                    activityType.style.background = "white";
                }, 3000);
            }
            document.getElementById('editErrMsg').innerHTML = err;
            document.getElementById('editError').style.display = 'block';
        }
    });

    // mozna doplnit echa o uspesnem smazani atak...
    document.getElementById('deleteActivityForm').addEventListener('submit', function(event){
        event.preventDefault();
        var activityID = this.getAttribute("name");
        socket.emit("delete activity", activityID, project._id);
        $("#deleteActivityModal").modal('toggle'); 
    });

    // delete activity from diagram
    socket.on('delete activity', function(activity) {
        deleteSelectedActivity(activity);
    })





    // TODO
    function canAddActivity(e) {
        let valid = true;
        console.log("Kontroluji form...")
        if("{{projectType}}" == "pert") {
            var optimisticValue = document.getElementById('optimisticValue').value;
            var mostExpectedValue = document.getElementById('mostExpectedValue').value;
            var pessimisticValue = document.getElementById('pessimisticValue').value;
            console.log(typeof(optimisticValue))
        }
        return false;
    }

    function canEditActivity() {
        let valid = true;

        return valid;
    }
    // END TODO?

    function closeErrDiv(divName) {
        document.getElementById(divName).style.display = 'none';
    }

    function showSecondRow() {
        document.getElementById('secondRow').style.display = 'inline';
        document.getElementById('addRow').style.display = 'none';
        document.getElementById('removeRow').style.display = 'inline';
    }

    function hideSecondRow() {
        document.getElementById('secondRow').style.display = 'none';
        document.getElementById('addRow').style.display = 'inline';
        document.getElementById('removeRow').style.display = 'none';
    }

    function changeCalculationType(obj) {
        if(obj.value == 'T') {
            document.getElementById('probRow').style.display = 'none';
            document.getElementById('timeRow').style.display = 'inline';
        } else {
            document.getElementById('timeRow').style.display = 'none';
            document.getElementById('probRow').style.display = 'inline';
        }
    }

</script>


